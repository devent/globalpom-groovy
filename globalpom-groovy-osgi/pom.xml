<!--

    Copyright © 2016 Erwin Müller (erwin.mueller@anrisoftware.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>globalpom-groovy</artifactId>
        <groupId>com.anrisoftware.globalpom</groupId>
        <version>4.5.1-SNAPSHOT</version>
        <relativePath>../globalpom-groovy</relativePath>
    </parent>

    <artifactId>globalpom-groovy-osgi</artifactId>
    <packaging>pom</packaging>
	<name>Global POM :: Groovy OSGi</name>
    <description>Adds Groovy support to compile Groovy sources and test sources as an OSGi bundle</description>
    <inceptionYear>2016</inceptionYear>
    <url>https://javadoc.anrisoftware.com/${project.groupId}/${project.artifactId}/${project.version}/</url>

    <properties>
        <project.custom.bundle.namespace>com.anrisoftware.globalpom</project.custom.bundle.namespace>
        <project.custom.bundle.namespace.internal>${project.custom.bundle.namespace}.internal</project.custom.bundle.namespace.internal>
    </properties>

    <scm>
        <connection>${project.custom.scm.pub}</connection>
        <developerConnection>${project.custom.scm.dev}</developerConnection>
        <url>${project.custom.scm.url}</url>
      <tag>HEAD</tag>
  </scm>

    <distributionManagement>
        <site>
            <id>site-ssh</id>
            <url>${site.ssh.url}</url>
        </site>
        <repository>
            <id>public_releases</id>
            <url>https://maven.anrisoftware.com/repository/maven-releases/</url>
        </repository>
        <snapshotRepository>
            <id>public_snapshots</id>
            <url>https://maven.anrisoftware.com/repository/maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <executions>
                    <!-- Configure extra execution of 'manifest' in process-classes
                        phase to make sure SCR metadata is generated before unit test runs -->
                    <execution>
                        <id>scr-metadata</id>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                        <configuration>
                            <supportIncrementalBuild>true</supportIncrementalBuild>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <Export-Package>!${project.custom.bundle.namespace.internal}.*,${project.custom.bundle.namespace}.*;version="${project.version}"</Export-Package>
                    <Private-Package>${project.custom.bundle.namespace.internal}.*</Private-Package>
                    <instructions>
                        <_include>osgi.bnd</_include>
                        <_dsannotations>*</_dsannotations>
                        <_metatypeannotations>*</_metatypeannotations>
                    </instructions>
                    <!-- Export SCR metadata to classpath to have them available
                        in unit tests -->
                    <exportScr>true</exportScr>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
