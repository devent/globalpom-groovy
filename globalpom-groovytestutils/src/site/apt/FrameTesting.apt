~~~
~~ #%L
~~ Global POM :: Groovy Test Utilities
~~ %%
~~ Copyright (C) 2011 - 2018 Advanced Natural Research Institute
~~ %%
~~ Licensed under the Apache License, Version 2.0 (the "License");
~~ you may not use this file except in compliance with the License.
~~ You may obtain a copy of the License at
~~
~~      http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.
~~ #L%
~~~

FrameTesting

    Creates a frame fixture to test components in a frame.

* Short Example

---
def injector = Guice.createInjector(new FrameTestingModule())
def testingFactory = injector.getInstance(FrameTestingFactory.class)
def title = "Frame Test"
def testing = testingFactory.create([title: title])()
testing.withFixture({
 // tests
})
---

* Example JUnit class in Groovy

---
import static com.anrisoftware.globalpom.utils.TestUtils.*
import groovy.transform.CompileStatic

import org.fest.swing.fixture.FrameFixture
import org.junit.BeforeClass
import org.junit.Test

import com.google.inject.Guice
import com.google.inject.Injector

/**
 * @see FrameTesting
 *
 * @author Erwin Mueller, erwin.mueller@deventm.org
 * @since 2.0
 */
@CompileStatic
class FrameTestingTest {

    @Test
    void "show frame"() {
        def title = "$NAME/show frame"
        def testing = factory.create([title: title])()
        testing.withFixture { FrameFixture fix ->
            assert fix != null
        }
    }

    @Test
    void "exception frame"() {
        def title = "$NAME/exception frame"
        def testing = factory.create([title: title])()
        shouldFailWith NullPointerException, {
            testing.withFixture { FrameFixture fix ->
                throw new NullPointerException()
            }
        }
    }

    static Injector injector

    static FrameTestingFactory factory

    static NAME = FrameTestingTest.class.simpleName

    @BeforeClass
    static void createFactory() {
        injector = Guice.createInjector(new FrameTestingModule())
        factory = injector.getInstance FrameTestingFactory
    }
}
---
